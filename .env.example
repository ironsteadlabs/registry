# MCP Registry Configuration
# Copy this file to .env and customize for your environment

# ============================================================================
# Server Configuration
# ============================================================================

# Address the HTTP server listens on
# Format: host:port or :port
# Default: :8080
MCP_REGISTRY_SERVER_ADDRESS=:8080

# Server timeouts
MCP_REGISTRY_SERVER_READ_TIMEOUT=30s
MCP_REGISTRY_SERVER_WRITE_TIMEOUT=30s
MCP_REGISTRY_SERVER_SHUTDOWN_TIMEOUT=10s

# ============================================================================
# Database Configuration
# ============================================================================

# Database type (postgres, sqlserver, mysql, sqlite, dynamodb)
# Default: postgres
MCP_REGISTRY_DATABASE_TYPE=postgres

# Database connection URL
# Examples:
#   PostgreSQL: postgres://user:pass@localhost:5432/mcp_registry?sslmode=require
#   SQL Server: sqlserver://user:pass@localhost:1433?database=mcp_registry
#   MySQL: mysql://user:pass@localhost:3306/mcp_registry
#   SQLite: file:/path/to/database.db
MCP_REGISTRY_DATABASE_URL=postgres://username:password@localhost:5432/mcp-registry

# Connection pool settings
MCP_REGISTRY_DATABASE_MAX_CONNECTIONS=30
MCP_REGISTRY_DATABASE_MIN_CONNECTIONS=5
MCP_REGISTRY_DATABASE_MAX_IDLE_TIME=30m
MCP_REGISTRY_DATABASE_MAX_LIFETIME=2h
MCP_REGISTRY_DATABASE_CONNECTION_TIMEOUT=10s

# Migration settings
MCP_REGISTRY_DATABASE_AUTO_MIGRATE=true
MCP_REGISTRY_DATABASE_MIGRATIONS_PATH=""

# Database-specific settings

# PostgreSQL/MySQL: SSL mode (disable, require, prefer, verify-ca, verify-full)
MCP_REGISTRY_DATABASE_SSL_MODE=prefer

# SQL Server: Enable encryption
MCP_REGISTRY_DATABASE_ENCRYPT=true

# DynamoDB: AWS region and table name
MCP_REGISTRY_DATABASE_REGION=us-east-1
MCP_REGISTRY_DATABASE_TABLE_NAME=mcp-registry-servers
MCP_REGISTRY_DATABASE_ENDPOINT=""  # For local DynamoDB

# Path or URL to import seed data (supports local files and HTTP URLs)
# For offline development, use: data/seed.json
MCP_REGISTRY_DATABASE_SEED_FROM=https://registry.modelcontextprotocol.io/v0/servers

# ============================================================================
# Authentication Configuration
# ============================================================================

# GitHub OAuth
# These creds are for local development with the 'MCP Registry Login (Local)' GitHub App
# They don't provide any real privileged access, hence why it's okay that they're here
# The staging and prod credentials client secrets are sensitive and are stored in encrypted form in ./deploy
MCP_REGISTRY_AUTH_GITHUB_CLIENT_ID=Iv23licy3GSiM9Km5jtd
MCP_REGISTRY_AUTH_GITHUB_CLIENT_SECRET=0e8db54879b02c29adef51795586f3c510a9341d

# JWT
# This should be a 32-byte Ed25519 seed (not the full private key). Generate a new seed with: `openssl rand -hex 32`
MCP_REGISTRY_AUTH_JWT_PRIVATE_KEY=bb2c6b424005acd5df47a9e2c87f446def86dd740c888ea3efb825b23f7ef47c

# OIDC
# Google Cloud Identity OIDC configuration for admin access
# Enable OIDC authentication for @modelcontextprotocol.io admin accounts
MCP_REGISTRY_AUTH_OIDC_ENABLED=false
# Example for Google Cloud Identity issuer
MCP_REGISTRY_AUTH_OIDC_ISSUER=https://accounts.google.com
MCP_REGISTRY_AUTH_OIDC_CLIENT_ID=1234.apps.googleusercontent.com
# Require @modelcontextprotocol.io Google Workspace domain
MCP_REGISTRY_AUTH_OIDC_EXTRA_CLAIMS=[{"hd":"modelcontextprotocol.io"}]
# Grant admin permissions to OIDC-authenticated users
MCP_REGISTRY_AUTH_OIDC_EDIT_PERMS=*
MCP_REGISTRY_AUTH_OIDC_PUBLISH_PERMS=*

# ============================================================================
# Feature Flags
# ============================================================================

# Anonymous authentication for development/testing only
# When enabled, allows anyone to get tokens for publishing to io.modelcontextprotocol.anonymous/* namespace
# This should be disabled in prod
MCP_REGISTRY_FEATURES_ENABLE_ANONYMOUS_AUTH=false

# Registry validation
# When enabled, validates that servers conform to registry schema requirements
MCP_REGISTRY_FEATURES_ENABLE_REGISTRY_VALIDATION=true

# ============================================================================
# Telemetry
# ============================================================================

MCP_REGISTRY_TELEMETRY_VERSION=dev

# ============================================================================
# Future: Cache Configuration (not yet implemented)
# ============================================================================

# MCP_REGISTRY_CACHE_TYPE=redis
# MCP_REGISTRY_CACHE_ENABLED=false
# MCP_REGISTRY_CACHE_URL=redis://localhost:6379
# MCP_REGISTRY_CACHE_TTL=1h

# ============================================================================
# Future: Queue Configuration (not yet implemented)
# ============================================================================

# MCP_REGISTRY_QUEUE_TYPE=rabbitmq
# MCP_REGISTRY_QUEUE_ENABLED=false
# MCP_REGISTRY_QUEUE_URL=amqp://localhost:5672
